
/******** Tree widget **********/

/** basic tree ****************************************************
 *  basic tree widget for use in main windows where no decoration
 *  is required.
 **/
tree {
  background-color: white;
  border: none;
  border-spacing: 0px;
}

/** class="inset" *************************************************
 *  this is the tree class used by dialogs to create treeviews with 
 *  inset borders, and default dialog spacing.
 **/
tree.inset {
  border: 1px inset #CCD0DD;
  margin: 1px 3px 2px 3px;
}

treeitem[selected="true"] > treerow,
treeitem[dd-dropon="true"] > treerow
  {
	color: white;
	background-color: #336699;
  }

treecell { 
  white-space: nowrap;
  vertical-align: middle;
  padding: 1px 0px 1px 2px;
} 

.treecell-header-image 
  {
    list-style-image      : inherit;
  }

.treecell-header,
.treecell-header-image,
.treecell-inset-header {
  background-color: #CCD0DD; 
  color: black;
  border: 1px outset #CCD0DD;
  vertical-align: middle;
  padding: 0px;
}

.treecell-header-box,
.treecell-header-image-box {
  padding: 1px;
}  

.treecell-header:hover:active > .treecell-header-box,
.treecell-inset-header:hover:active > .treecell-header-box,
.treecell-header-image:hover:active > .treecell-header-image-box {
  padding: 2px 0px 0px 2px;
}

.treecell-header:hover:active,
.treecell-inset-header:hover:active,
.treecell-header-image:hover:active {
  border: 1px inset #CCD0DD;
}

.treecell-image 
  {
    padding               : 0px;
  }
  
/** class="propertylist" ******************************************
 *  class for cells in grid-formatted property lists.
 **/
treecell.propertylist {
  padding-left: 5px;
  border-right: 1px solid #CCD0DD;
  border-bottom: 1px solid #CCD0DD;
}

.tree-cell-primary-icon {
  list-style-image: inherit;
  padding-right: 2px;
}

.tree-cell-icon {
  list-style-image: inherit;
  padding-right: 2px;
}

.treecell-indent > .tree-cell-primary-icon {
  padding-left: 14px;
 }

treeitem[container="true"] > treerow > .treecell-indent > .tree-cell-primary-icon {
  padding-left: 0px;
}

.tree-cell-twisty {
 list-style-image: url("chrome://global/skin/closedtwisty.gif");
 user-focus:ignore;
 padding-right: 2px;
}

treeitem[container="true"] > treerow > .treecell-indent > .tree-cell-primary-icon {
 padding-left: 0px;
}

treeitem[selected="true"] > treerow > treecell > .tree-cell-twisty {
  list-style-image: url("chrome://global/skin/closedtwisty-selected.gif");
}

.tree-cell-twisty:hover {
 text-decoration: none;
}

.tree-cell-twisty:active {
 text-decoration: none;
}

.tree-cell-twisty[disabled="true"] {
 list-style-image: none;
}

treeitem[container="true"][open="true"] > treerow > treecell > .tree-cell-twisty {
 list-style-image: url("chrome://global/skin/opentwisty.gif");
}

treeitem[selected="true"][container="true"][open="true"] > treerow > treecell > .tree-cell-twisty {
  list-style-image: url("chrome://global/skin/opentwisty-selected.gif");
}


/* tree header with sort direction indicators */
.tree-header-sortdirection {
  list-style-image      : none;
}

.sortDirectionIndicator[sortDirection="ascending"] > .treecell-header-box > .tree-header-sortdirection {
  list-style-image: url("chrome://global/skin/sortAscending.gif");
}

.sortDirectionIndicator[sortDirection="descending"] > .treecell-header-box > .tree-header-sortdirection {
  list-style-image: url("chrome://global/skin/sortDescending.gif");
}

treecol[sortDirection="true"],
treecol[sortActive="true"]
  {
    background-color       : #DFDFDF;
  }

.treecell-popup-icon
  {
    list-style-image       : url("chrome://global/skin/columnselect.gif");
  }

.inline-edit-cell-box
  {
    margin-left           : 2px;
  }





