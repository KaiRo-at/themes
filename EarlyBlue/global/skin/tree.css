
/******** Tree widget **********/

/** basic tree ****************************************************
 *  basic tree widget for use in main windows where no decoration
 *  is required.
 **/
tree {
  background-color: white;
  border: none;
  border-spacing: 0px;
}

/** class="inset" *************************************************
 *  this is the tree class used by dialogs to create treeviews with 
 *  inset borders, and default dialog spacing.
 **/
tree.inset {
  border-top: 1px solid #666699;
  border-bottom: 1px solid white;
  border-left: 1px solid #666699;
  border-right: 1px solid white;
  margin: 1px 3px 2px 3px;
}

treeitem[selected="true"] > treerow { 
	color: white;
	background-color: #336699;
}

treecell { 
  white-space: nowrap;
  vertical-align: middle;
  padding: 1px 0px 1px 2px;
} 

.treecell-header { 
  background-color: #CCD0DD; 
  color: black;
  border-right: 1px solid white;
  vertical-align: middle;
  padding: 0px 0px 0px 5px;
} 

.treecell-inset-header {
  background-color: #CCD0DD; 
  border-top: 1px solid white;
  border-bottom: 1px solid #666699;
  border-left: 1px solid white;
  border-right: 1px solid #666699;
}

tree.inset > treehead > treerow > treecell.sortable:active {
  border-top: 1px solid #666699;
  border-bottom: 1px solid white;
  border-left: 1px solid #666699;
  border-right: 1px solid white;
}

/** class="propertylist" ******************************************
 *  class for cells in grid-formatted property lists.
 **/
treecell.propertylist {
  padding-left: 5px;
  border-right: 1px solid #CCD0DD;
  border-bottom: 1px solid #CCD0DD;
}

.tree-cell-primary-icon {
  list-style-image: inherit;
  padding-right: 2px;
}

.tree-cell-icon {
  list-style-image: inherit;
  padding-right: 2px;
}

.treecell-indent > .tree-cell-primary-icon {
  padding-left: 14px;
 }

treeitem[container="true"] > treerow > .treecell-indent > .tree-cell-primary-icon {
  padding-left: 0px;
}

.tree-cell-twisty {
 list-style-image: url("chrome://global/skin/closedtwisty.gif");
 user-focus:ignore;
 padding-right: 2px;
}

treeitem[selected="true"] > treerow > treecell > .tree-cell-twisty {
  list-style-image: url("chrome://global/skin/closedtwisty-selected.gif");
}

.tree-cell-twisty:hover {
 text-decoration: none;
}

.tree-cell-twisty:active {
 text-decoration: none;
}

.tree-cell-twisty[disabled="true"] {
 list-style-image: none;
}

treeitem[container="true"][open="true"] > treerow > treecell > .tree-cell-twisty {
 list-style-image: url("chrome://global/skin/opentwisty.gif");
}

treeitem[selected="true"][container="true"][open="true"] > treerow > treecell > .tree-cell-twisty {
  list-style-image: url("chrome://global/skin/opentwisty-selected.gif");
}


/* tree header with sort direction indicators */
.sortDirectionIndicator[sortDirection="ascending"]  > .tree-header-sortdirection {
  list-style-image: url("chrome://global/skin/sortAscending.gif");
  margin-right: 3px;
}

.sortDirectionIndicator[sortDirection="descending"] > .tree-header-sortdirection {
  list-style-image: url("chrome://global/skin/sortDescending.gif");
  margin-right: 3px;
}

treecol[sortDirection="true"],
treecol[sortActive="true"]
  {
    background-color       : #DFDFDF;
  }

.treecell-popup-icon
  {
    list-style-image       : url("chrome://global/skin/columnselect.gif");
  }

