/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is "Classic" theme of mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * the Mozilla Organization.
 * Portions created by the Initial Developer are Copyright (C) 1998-2001
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Robert Kaiser <KaiRo@KaiRo.at>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

@namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");

/******** Tree widget **********/ 

/** basic tree ****************************************************
 *  basic tree widget for use in main windows where no decoration
 *  is required.
 **/
tree 
  {
    border                : 1px inset #CCD0DD;
    margin                : 1px 3px 2px 3px;
    background-color      : white;
    color                 : #000000;
  }

.tree-container-treerows[dragover="true"][dragdroptree="true"]
  {
  }  
  
.tree-container-treerows
  {
  }  

.tree-container-treerows[dragdroptree="true"]
  {
  }  
  
treeitem[selected="true"] > treerow
  {
    color                 : white;
    background-color      : #336699;
  }

treeitem 
  {
    list-style-image      : none;
  }
  
treerow 
  {
    border                : 1px solid transparent;
  }
  
treehead > treeitem > treerow,
treehead > treerow 
  {
    border                : none;
  }
  
treecell 
  { 
    padding               : 0px 0px 1px 2px;
    white-space           : nowrap;
  } 

tree:focus > treechildren treeitem[selected="true"] > treerow,
treeitem[dd-dropon="true"] > treerow
  {
    color                 : white;
    background-color      : #336699;
  }

tree:focus > treechildren treeitem[selected="true"][current="true"] > treerow
  {
    border                : 1px dotted #9999CC;
  }

.treecell-header-image 
  {
    list-style-image      : inherit;
  }
  
.treecell-header,
.treecell-inset-header,
.treecell-header-image
  { 
    border                : 1px outset #CCD0DD;
    padding               : 0px;
    background-color      : #CCD0DD;
    color                 : #000000;
  }

.treecell-header-box,
.treecell-header-image-box 
  {
  }  

.treecell-header-box
  {
    padding               : 0px 4px 0px 4px;
  }

.treecell-header-text
  {
    margin                : 0px;
  }

.treecell-header-image-box 
  {
    padding               : 0px 1px 0px 1px;
  }
  
.treecell-header:hover:active,
.treecell-header-image:hover:active,
.treecell-inset-header:hover:active 
  {
    border                : 1px inset #CCD0DD;
  }

.treecell-header:hover:active > .treecell-header-box,
.treecell-inset-header:hover:active > .treecell-header-box,
.treecell-header-image:hover:active > .treecell-header-image-box
  {
    border-top            : 1px solid transparent;
    border-right          : none;
    border-bottom         : none;
    border-left           : 1px solid transparent;
  }
  
.treecell-header:hover:active > .treecell-header-box,
.treecell-inset-header:hover:active > .treecell-header-box
  {
    padding               : 1px 4px 0px 5px;
  }
  
.treecell-header-image:hover:active > .treecell-header-image-box
  {
    padding               : 1px 1px 0px 2px;
  }

.treecell-image 
  {
    padding               : 0px;
  }
    
/* slimline sidebar treeheaders */  
.treecell-header.treecell-header-sidebarpanel,
.treecell-inset-header.treecell-header-sidebarpanel
  {
    padding               : 0px 1px 1px 3px;
  }

.treecell-header-sidebarpanel > .treecell-header-box
  {
  }
 
/** class="propertylist" ******************************************
 *  class for cells in grid-formatted property lists.
 **/
 
treecell.propertylist 
  {
    border-right          : 1px solid #CCD0DD;
    border-bottom         : 1px solid #CCD0DD;
    padding-left          : 5px;
  }

.tree-cell-primary-icon,
.tree-cell-primary-icon-inline-edit-folder
  {
    list-style-image      : inherit;
    padding-right         : 2px;
  }

.tree-cell-icon 
  {
    list-style-image      : inherit;
    padding-right         : 2px;
  }

.tree-cell-twisty 
  {
    list-style-image      : url("chrome://global/skin/tree/twisty-closed.gif");
    -moz-user-focus       : ignore;
    padding-right         : 2px;
  }

.treecell-indent > .tree-cell-primary-icon 
  {
    padding-left          : 11px;
  }

treeitem[container="true"] > treerow > .treecell-indent > .tree-cell-primary-icon 
  {
    padding-left          : 0px;
  }

.tree-cell-twisty[disabled="true"] 
  {
    list-style-image      : none;
  }

treeitem[container="true"][open="true"] > treerow > treecell > .tree-cell-twisty 
  {
    list-style-image      : url("chrome://global/skin/tree/twisty-open.gif");
  }

treeitem[empty="true"] > treerow > treecell > .tree-cell-twisty {               
    visibility            : hidden;
}   

/* tree header with sort direction indicators */

.tree-header-sortdirection 
  {
    list-style-image      : none;
  }

.sortDirectionIndicator[sortDirection="ascending"]  > .treecell-header-box > .tree-header-sortdirection 
  {
    list-style-image      : url("chrome://global/skin/tree/sort-asc.gif");
  }

.sortDirectionIndicator[sortDirection="descending"] > .treecell-header-box > .tree-header-sortdirection 
  {
    list-style-image      : url("chrome://global/skin/tree/sort-desc.gif");
  }

/* column selection popup menu icon */

.treecell-popup-icon
  {
    list-style-image      : url("chrome://global/skin/tree/columnpicker.gif");
  }

/* Inline Editable Treecells */

treerow[mode="inline-edit"] 
  {
    border-top            : none !important;
    border-bottom         : none !important;
    background-color      : transparent !important;
  }

.inline-edit-cell-box
  {
    margin-left           : 2px;
  }

.inline-edit-cell-box[mode="edit"] 
  {
    margin-left           : 0px;
  }

.inline-edit-cell-box[mode="edit"] 
  {
    margin                : 0px;
  }
